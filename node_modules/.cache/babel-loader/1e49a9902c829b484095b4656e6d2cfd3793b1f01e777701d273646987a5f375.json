{"ast":null,"code":"// Import necessary modules and components from the \"react-router-dom\" library\n// `BrowserRouter` provides the routing context for the application\n// `Routes` is a container for all the route definitions\n// `Route` defines individual routes for the app\nimport{BrowserRouter,Routes,Route}from\"react-router-dom\";// Import custom components/pages that will be displayed for each route\nimport Layout from\"./pages/Layout\";import About from\"./pages/About\";import Ecosystem from\"./pages/Ecosystem\";import Gallery from\"./pages/Gallery\";import SiteMap from\"./pages/SiteMap\";import Contact from\"./pages/Contact\";import NoPage from\"./pages/NoPage\";// Define and export the main component for the app, which sets up routing\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MyPages(){return(/*#__PURE__*/// Use `BrowserRouter` to enable routing in the app\n_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsxs(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Layout,{}),children:[/*#__PURE__*/_jsx(Route,{index:true,element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{path:\"gallery\",element:/*#__PURE__*/_jsx(Gallery,{})}),/*#__PURE__*/_jsx(Route,{path:\"ecosystem\",element:/*#__PURE__*/_jsx(Ecosystem,{})}),/*#__PURE__*/_jsx(Route,{path:\"sitemap\",element:/*#__PURE__*/_jsx(SiteMap,{})}),/*#__PURE__*/_jsx(Route,{path:\"contact\",element:/*#__PURE__*/_jsx(Contact,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(NoPage,{})})]})})})}));}","map":{"version":3,"names":["BrowserRouter","Routes","Route","Layout","About","Ecosystem","Gallery","SiteMap","Contact","NoPage","jsx","_jsx","jsxs","_jsxs","MyPages","children","path","element","index"],"sources":["C:/Users/himsh/OneDrive/Documents/GitHub/Woodland-Conservation-Site/src/MyPages.js"],"sourcesContent":["// Import necessary modules and components from the \"react-router-dom\" library\r\n// `BrowserRouter` provides the routing context for the application\r\n// `Routes` is a container for all the route definitions\r\n// `Route` defines individual routes for the app\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\n// Import custom components/pages that will be displayed for each route\r\nimport Layout from \"./pages/Layout\";\r\nimport About from \"./pages/About\";\r\nimport Ecosystem from \"./pages/Ecosystem\";\r\nimport Gallery from \"./pages/Gallery\";\r\nimport SiteMap from \"./pages/SiteMap\";\r\nimport Contact from \"./pages/Contact\";\r\nimport NoPage from \"./pages/NoPage\";\r\n\r\n// Define and export the main component for the app, which sets up routing\r\nexport default function MyPages() {\r\n  return (\r\n    // Use `BrowserRouter` to enable routing in the app\r\n    <BrowserRouter>\r\n    <Layout>\r\n      {/* Define all the available routes inside the `Routes` component */}\r\n      <Routes>\r\n        {/* Main route for the application, with `Layout` as the parent component */}\r\n        <Route path=\"/\" element={<Layout />}>\r\n          {/* Sub-route for the homepage (`index` represents the default path `/`) */}\r\n          <Route index element ={<About />} />\r\n          {/* Route for the `/gallery` path, displaying the `Gallery` component */}\r\n          <Route path=\"gallery\" element={<Gallery />} />\r\n          {/* Route for the `/ecosystem` path, displaying the `Ecosystem` component */}\r\n          <Route path=\"ecosystem\" element={<Ecosystem />} />\r\n          {/* Route for the `/sitemap` path, displaying the `SiteMap` component */}\r\n          <Route path=\"sitemap\" element={<SiteMap />} />\r\n          {/* Route for the `/contact` path, displaying the `Contact` component */}\r\n          <Route path=\"contact\" element={<Contact />} />\r\n          {/* Catch-all route (`*`) for undefined paths, displaying the `NoPage` component */}\r\n          <Route path=\"*\" element={<NoPage />} />\r\n        </Route>\r\n      </Routes>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAASA,aAAa,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CAE/D;AACA,MAAO,CAAAC,MAAM,KAAM,gBAAgB,CACnC,MAAO,CAAAC,KAAK,KAAM,eAAe,CACjC,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CACzC,MAAO,CAAAC,OAAO,KAAM,iBAAiB,CACrC,MAAO,CAAAC,OAAO,KAAM,iBAAiB,CACrC,MAAO,CAAAC,OAAO,KAAM,iBAAiB,CACrC,MAAO,CAAAC,MAAM,KAAM,gBAAgB,CAEnC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,cAAe,SAAS,CAAAC,OAAOA,CAAA,CAAG,CAChC,oBACE;AACAH,IAAA,CAACX,aAAa,EAAAe,QAAA,cACdJ,IAAA,CAACR,MAAM,EAAAY,QAAA,cAELJ,IAAA,CAACV,MAAM,EAAAc,QAAA,cAELF,KAAA,CAACX,KAAK,EAACc,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEN,IAAA,CAACR,MAAM,GAAE,CAAE,CAAAY,QAAA,eAElCJ,IAAA,CAACT,KAAK,EAACgB,KAAK,MAACD,OAAO,cAAGN,IAAA,CAACP,KAAK,GAAE,CAAE,CAAE,CAAC,cAEpCO,IAAA,CAACT,KAAK,EAACc,IAAI,CAAC,SAAS,CAACC,OAAO,cAAEN,IAAA,CAACL,OAAO,GAAE,CAAE,CAAE,CAAC,cAE9CK,IAAA,CAACT,KAAK,EAACc,IAAI,CAAC,WAAW,CAACC,OAAO,cAAEN,IAAA,CAACN,SAAS,GAAE,CAAE,CAAE,CAAC,cAElDM,IAAA,CAACT,KAAK,EAACc,IAAI,CAAC,SAAS,CAACC,OAAO,cAAEN,IAAA,CAACJ,OAAO,GAAE,CAAE,CAAE,CAAC,cAE9CI,IAAA,CAACT,KAAK,EAACc,IAAI,CAAC,SAAS,CAACC,OAAO,cAAEN,IAAA,CAACH,OAAO,GAAE,CAAE,CAAE,CAAC,cAE9CG,IAAA,CAACT,KAAK,EAACc,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEN,IAAA,CAACF,MAAM,GAAE,CAAE,CAAE,CAAC,EAClC,CAAC,CACF,CAAC,CACD,CAAC,CACI,CAAC,EAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}